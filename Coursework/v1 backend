from tkinter import messagebox
#Task 1

class SmartPlug: 
    def __init__(self, rate):
        self.switchedOn = False 
        self.consumptionRate = rate 

    def toggleSwitch(self):
        self.switchedOn = not self.switchedOn

    def getSwitchedOn(self):
        if self.switchedOn == True:
            return "On"
        else:
            return "Off"
    
    def getConsumptionRate(self):
        return self.consumptionRate
    
    def setConsumptionRate(self, rate):
        try:
            rate = float(rate)
            if 0 <= rate <= 150:
                self.consumptionRate = int(rate)
            else:
                raise ValueError
        except (ValueError, TypeError):
            messagebox.showerror("Error", "Invalid consumption rate, must be between 0 and 150.")
                
    def __str__(self):
        output = f"SmartPlug({self.switchedOn}, {self.consumptionRate})"
        return output


# def testDevice():
#     plug = SmartPlug(45)
#     plug.toggleSwitch()
#     print(f"Current candition of switch is {plug.getSwitchedOn()}")
#     print(f"Current consumption rate is {plug.getConsumptionRate()}")
#     plug.setConsumptionRate(50)
#     print(f"New consumption rate is {plug.getConsumptionRate()}")
#     print(plug)
# testDevice()
    
#Task 2
class SmartSpeaker:
    streaming = ["Spotify", "Apple", "Amazon"]
    def __init__(self):
        self.switchedOn = False
        self.option = "Amazon"
    
    def toggleSwitch(self):
        self.switchedOn = not self.switchedOn

    def getSwitchedOn(self):
        if self.switchedOn == True:
            return "On"
        else:
            return "Off"
    
    def getOption(self):
        return self.option

    def setOption(self, option):
        if option in self.streaming:
            self.option = option
        else:
           messagebox.showerror("Error", f"Invalid option, select from {' ' .join(self.streaming)}")

    def __str__(self):
        output = f"SmartSpeaker({self.switchedOn}, {self.option})"
        return output
    
# def testSpeaker():
#     speaker = SmartSpeaker()
#     speaker.toggleSwitch()
#     print(f"Current candition of switch is {speaker.getSwitchedOn()}")
#     print(f"Current option is {speaker.getOption()}")
#     speaker.setOption("Spotify")
#     print(f"New option is {speaker.getOption()}")
#     print(speaker)
# testSpeaker()


#Task 3

class SmartHome:
    def __init__(self):
        self.devices = []
    
    def getDevices(self):
        return self.devices
    
    def getDeviceAt(self, index):
        return self.devices[index]
    
    def removeDeviceAt(self, index):
        self.devices.pop(index)

    def addDevice(self, device):
        self.devices.append(device)

    def toggleSwitch(self, index):
        self.devices[index].toggleSwitch()

    def turnOnAll(self):
        for device in self.devices:
            if device.getSwitchedOn() == "Off":
                device.toggleSwitch() 

    def turnOffAll(self):
        for device in self.devices:
            if device.getSwitchedOn() == "On":
                device.toggleSwitch()

    def __str__(self):
        output = "SmartHome("
        for device in self.devices:
            output += f"{device}, "
        output = output[:-2]
        output += ")"
        return output

# def testHome():
#     home = SmartHome()
#     plug1 = SmartPlug(45)
#     plug2 = SmartPlug(45)
#     speaker = SmartSpeaker()
#     plug1.toggleSwitch()
#     plug1.setConsumptionRate(150)
#     plug2.setConsumptionRate(50)
#     speaker.setOption("Spotify")
#     home.addDevice(plug1)
#     home.addDevice(plug2)
#     home.addDevice(speaker)
#     home.toggleSwitch(1)
#     print(home)
#     home.turnOnAll()
#     print(home)
# testHome()
